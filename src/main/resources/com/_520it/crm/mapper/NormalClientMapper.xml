<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com._520it.crm.mapper.NormalClientMapper" >
  <resultMap id="BaseResultMap" type="com._520it.crm.domain.NormalClient" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="is_personal" property="isPersonal" jdbcType="TINYINT" />
    <result column="level" property="level" jdbcType="VARCHAR" />
    <result column="numbertype" property="numbertype" jdbcType="VARCHAR" />
    <result column="number" property="number" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="is_insured" property="isInsured" jdbcType="BIT" />
    <result column="gender" property="gender" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="BIT" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="profession" property="profession" jdbcType="VARCHAR" />

  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from insuredperson
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com._520it.crm.domain.NormalClient" useGeneratedKeys="true" keyProperty="id" >
    insert into insuredperson (name, is_personal, level, 
      numbertype, number, address, 
      phone, is_insured,age,email,gender,profession)
    values (#{name,jdbcType=VARCHAR}, #{isPersonal,jdbcType=TINYINT}, #{level,jdbcType=VARCHAR}, 
      #{numbertype,jdbcType=VARCHAR}, #{number,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{isInsured,jdbcType=BIT},#{age,jdbcType=BIT},#{email,jdbcType=VARCHAR},#{gender,jdbcType=VARCHAR},
      #{profession,jdbcType=VARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com._520it.crm.domain.NormalClient" >
    update insuredperson
    set name = #{name,jdbcType=VARCHAR},
      is_personal = #{isPersonal,jdbcType=TINYINT},
      level = #{level,jdbcType=VARCHAR},
      numbertype = #{numbertype,jdbcType=VARCHAR},
      number = #{number,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      is_insured = #{isInsured,jdbcType=BIT},
       age = #{age,jdbcType=BIT},
       gender = #{gender,jdbcType=VARCHAR},
       email = #{email,jdbcType=VARCHAR},
       profession = #{profession,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select id, name, is_personal, level, numbertype, number, address, phone, is_insured ,age,email,gender,profession
    from insuredperson
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, name, is_personal, level, numbertype, number, address, phone, is_insured,age,email,gender,profession
    from insuredperson
  </select>

  <sql id="where_sql">
    <where>
      <if test="keyword!=null and keyword!=''">
        (
        name LIKE concat('%',#{keyword},'%')
        or email LIKE concat('%',#{keyword},'%')
        or profession LIKE concat('%',#{keyword},'%')
        )
      </if>
    </where>
  </sql>

  <!-- 查询总结果数 -->
  <select id="queryPageCount" resultType="long">
    select count(*) from insuredperson
    <include refid="where_sql" />
  </select>

  <!-- 查询结果集 -->
  <select id="queryPageResult" resultMap="BaseResultMap">
    select * FROM insuredperson
    <include refid="where_sql" />
    limit #{start},#{rows}
  </select>

</mapper>